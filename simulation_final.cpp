/* Shabbir Mahmood ID: 14015439 Random Numbers
/*
Sample Input For LCM
19
13
1000
18
*/
#include<bits/stdc++.h>
using namespace std;
int range = 0, category = 0;                    // Global Variables

void LCM(int N)              // LCM
{
    int a,c,m,x0,n,temp;
    double R,x,O[100] = {0};
    double r,chy = 0;

    cout<<"----- x1 = ((a*x0)+c) mod m ------"<<endl;
    cout<<"a : ";
    cin>>a;
    cout<<"c : ";
    cin>>c;
    cout<<"m : ";
    cin>>m;
    cout<<"x0: ";
    cin>>x0;

    n = N; //******************

    fstream file1 ("random.txt", ios::in | ios::out | ios::trunc);

    if(!file1.is_open())    // File does not exit or can not be opened
    {
        cout<<"ERROR....File Can't be Opened"<<endl;
    }
    else
    {
        for(int i=1; i<=n; i++)
        {
            temp = ((a*x0)+c);
            x = temp%(m+i);

            x0 = x;
            R = (int)((x/(m+i))*range);
           // x= R;

            file1<<R<<" ";
        }
        file1.seekg(0);
        file1.close();
        cout<<"Successfully Random Numbers are Generated by LCM Algorithm"<<endl;
    }
}

void Chy_Square(int N)    // Chi Square Test
{
    int n = N;
    double num, chy, O[100] = {0};

    cout<<"Enter the total Category Number(Degrees of Freedom+1): ";
    cin>>category;

    int step_size = range / category;  // Calculating Step Size for Each Row
    //cout<<step_size<<endl;
    fstream file1 ("random.txt", ios::in | ios::out );

    if(!file1.is_open())    // File does not exit or can not be opened
    {
        cout<<"ERROR....File Can't be Opened"<<endl;
    }
    else
    {
        for(int j=0; j<n; j++)
        {
            file1>>num;
            //cout<<num<<endl;
            for(int i=0; i<category; i++)
            {
                if( num >= (i*step_size) &&  num <= ((step_size*(i+1))-1) )
                {
                    O[i]++;
                }
            }
        }
    }
    file1.seekg(0);
    file1.close();

    cout<<endl;
    double  E= n/category;
    for(int j=0; j<category; j++)
        {
            cout<<"O"<<j<<": "<<O[j]<<endl;
            chy = chy + (pow((O[j]-E),2)/E);
        }

        cout<<"Critical Value for Chi Square Test(Z0): "<<chy<<endl;
}

void Run_Up_Down(int n)     // Run Up Down Test
{
    int N,R,no_of_run=1;
    N = n;

    time_t t;
    srand((unsigned)time(&t));

    fstream file1 ("random.txt", ios::in | ios::out );
    fstream file2 ("run_1.txt" , ios :: in | ios :: out | ios :: trunc);

    if(!file1.is_open())
    {
        cout<<"File can not be Opened"<<endl;
    }
    else
    {
        int num_a,num_b;

        file1>>num_a;
        file1>>num_b;

        while(!file1.eof())
        {
            if(num_b>num_a)
            {
                file2<<"+"<<" ";
            }
            else if(num_b<=num_a)
            {
                file2<<"-"<<" ";
            }
            num_a = num_b;  //**** incrementing file pointer
            file1>>num_b;

        }
        file2.seekg(0);  //*****

        char sign_a, sign_b;
        file2>>sign_a;
        file2>>sign_b;
        while(!file2.eof())
        {
            if(sign_b == sign_a)
            {
                // Do nothing
            }
            else if(sign_b != sign_a)
            {
                no_of_run++;
            }
            sign_a = sign_b;  //**** incrementing file pointer
            file2>>sign_b;
        }
        file1.close();
        file2.close();
    }
    cout<<"No of Runs: "<<no_of_run<<endl;
    double mean = (double)(2*N-1)/3;
    double variance = (double)(16*N-29)/90;
    double z0 = (no_of_run - mean)/sqrt(variance);

    cout<<"Mean of the Random Sequence    : "<<mean<<endl;
    cout<<"Variance of the Random Sequence: "<<variance<<endl;
    cout<<"Critical Value(Z0) of the Test : "<<z0<<endl;
}

void Run_Above_Below(int n) // Run Above Below Test
{
    int N,R,mean_ran, run_above=0,run_below=0,no_of_run=0;
    N = n;
    mean_ran = (range-1)/2;

    fstream file1 ("random.txt", ios::in | ios::out );
    fstream file2 ("run_2.txt" , ios :: in | ios :: out | ios :: trunc);

    if(!file1.is_open())
    {
        cout<<"File can not be Opened"<<endl;
    }
    else
    {
       int num;
       file1>>num;

        while(!file1.eof())
        {
            if(num > mean_ran)
            {
                file2<<"+"<<" ";
            }
            else if(num <= mean_ran)
            {
                file2<<"-"<<" ";
            }
            file1>>num;  //**** incrementing file pointer

        }
        file2.seekg(0);  //*****

        char sign;

        file2>>sign;
        while(!file2.eof())
        {
            if(sign =='+')
            {
                run_above++;
                file2>>sign;
                while(sign =='+'&& !file2.eof())
                {
                    file2>>sign;
                }
            }
            else if(sign =='-')
            {
                run_below++;
                file2>>sign;
                while(sign =='-'&& !file2.eof())
                {
                    file2>>sign;
                }
            }
             //**** Need not to increment the file pointer
        }
        file1.close();
        file2.close();
    }
    no_of_run = run_above + run_below;
    cout<<"No of Above Runs:                "<<run_above<<endl;
    cout<<"No of Below Runs:                "<<run_below<<endl;
    cout<<"No of Runs:                      "<<no_of_run<<endl;

    double mean = (double)(2*run_above*run_below)/10 + 0.5;
    double variance = (double) (2*run_above*run_below*(2*run_above*run_below-N)) /((N*N)*(N-1))  ;
    double z0 = (no_of_run - mean)/sqrt(variance);

    cout<<"Mean of the Random Sequence    : "<<mean<<endl;
    cout<<"Variance of the Random Sequence: "<<variance<<endl;
    cout<<"Critical Value(Z0) of the Test : "<<z0<<endl;
}

void Poker(int n)           // Poker Test
{
    int N,R,no_of_run=1;
    int num,rem,maxx = 0,cnt1=0,cnt2=0,cnt3=0; //*****
    N = n;

    fstream file1 ("random.txt", ios::in | ios::out );

    if(!file1.is_open())
    {
        cout<<"File can not be Opened"<<endl;
    }
    else
    {
       int num;
       file1>>num;

        while(!file1.eof())
        {
            int digit[10] = {0}; //**********
            while(num>0)
            {
                rem = num%10;
                digit[rem] ++;
                num = num/10;
            }

            maxx = digit[0];
            for(int i=1; i<=9; i++)
            {
                if(digit[i] > maxx)
                {
                    maxx = digit[i];
                }
            }
            if(maxx == 1 || maxx == 0) //***********
            {
                //cout<<"Different"<<endl;
                cnt1++;
            }
            else if(maxx == 2)
            {
                //cout<<"2 Digits Same"<<endl;
                cnt2++;
            }
            else if(maxx == 3)
            {
                //cout<<"3 Digits Same"<<endl;
                cnt3++;
            }

            file1>>num;;  //**** incrementing file pointer

        }
        file1.seekg(0);  //*****
        file1.close();
    }

    cout<<"All Digits are Different     : "<<cnt1<<endl;
    cout<<"One Pair of Digits are Same  : "<<cnt2<<endl;
    cout<<"All Digits are Same          : "<<cnt3<<endl;
    cout<<endl;
    double E[3],O[3],chy;
    O[0] = cnt1;
    O[1] = cnt2;
    O[2] = cnt3;

    E[0] = 0.72 * N;  // All Digits are Different
    E[1] = 0.27 * N;  // One Pair of Digits are Same
    E[2] = 0.01 * N;  // All Digits are Same


    for(int j=0; j<3; j++)
        {
            chy = chy + (pow((O[j]-E[j]),2)/E[j]);
        }
    cout<<endl;
    cout<<"Poker Test Critical Value (Z0): "<<chy<<endl;
}

int main()
{
    int N,choice1,choice2;
    cout<<"---------------------Random Number Generation---------------------"<<endl;
    cout<<"Enter the number of Random Numbers you want to Generate(N): ";
    cin>>N;
    cout<<"Enter the Range of Random Numbers(Maximum Limit)          : ";
    cin>>range;
    cout<<"Press 1 for (LCM) & 2 for (Built in Function)"<<endl;
    cin>>choice1;
    //************************* Random Number Generation *************************
    if(choice1 == 1)
    {
        LCM(N);
    }
    else if(choice1 == 2)
    {
        time_t t;
        srand((unsigned)time(&t));  // Built in Function for Random Number Generation(Seed)
        int R;

        fstream file1 ("random.txt", ios::in | ios::out | ios::trunc);
        if(!file1.is_open())    // File does not exit or can not be opened
        {
            cout<<"ERROR....File Can't be Opened "<<endl;
            return 0;
        }
        else
        {
            for(int i=0; i<N; i++)
            {
                R = rand() % range;
                file1<<R<<" ";
            }
            cout<<"Successfully Random Numbers are Generated by Built in Function"<<endl;
        }
    }
    else
    {
        cout<<"Error in Random Number Generation(Press 1 or 2)"<<endl;
    }

    int test=1;
    while(test)
    {
        cout<<endl;
    cout<<"---------Uniformity Test----------"<<endl;
    cout<<"Press (1) for Chi Square Test     "<<endl;
    cout<<"----------------------------------"<<endl;
    cout<<"---------Independence Test--------"<<endl;
    cout<<"Press (2) for Run Up Down Test    "<<endl;
    cout<<"Press (3) for Run Above Below Test"<<endl;
    cout<<"Press (4) for Run Poker Test      "<<endl;
    cout<<"----------------------------------"<<endl;

    cin>>choice2;

        if(choice2 == 1)
        {
            Chy_Square(N);      // Chi Square Test
        }
        else if(choice2 == 2)
        {
            Run_Up_Down(N);     // Run Up Down Test
        }
        else if(choice2 == 3)
        {
            Run_Above_Below(N); // Run Above Below Test
        }
        else if(choice2 == 4)
        {
            Poker(N);           // Poker Test
        }
        else
        {
            cout<<"Error in Random Number Generation(Press 1 to 4)"<<endl;
        }
        cout<<endl;
        cout<<"***[Press any Key to Continue & (0) for Exit]***: ";
        cin>>test;
    }
    cout<<"***Thank You***"<<endl;

    return 0;
}
